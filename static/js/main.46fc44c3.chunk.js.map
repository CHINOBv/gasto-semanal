{"version":3,"sources":["components/Header.jsx","components/Form.jsx","components/Presupuesto.jsx","helper.js","components/Restante.jsx","components/Control.jsx","components/Gasto.jsx","components/Listado.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","title","Form","NGast","React","createRef","Cost","CrGasto","e","preventDefault","gasto","Gast","current","value","Coste","props","Addgasto","onSubmit","this","className","type","placeholder","ref","Component","Presupuesto","role","presupuesto","revisarPresupuesto","restante","Restante","Control","Gasto","state","defaultpropTypes","Listado","Object","keys","gastos","map","key","App","Date","now","restPres","setState","cost","restar","Number","ObtenerPresupuesto","resultado","totalPresupuesto","parseInt","validarPresupuesto","prompt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.46fc44c3.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = ({ title }) => {\n  return <h1>{title}</h1>;\n};\n\nHeader.propTypes = {\n  title: PropTypes.string\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Form extends Component {\n  NGast = React.createRef();\n  Cost = React.createRef();\n\n  CrGasto = e => {\n    e.preventDefault();\n\n    const gasto = {\n      Gast: this.NGast.current.value,\n      Coste: this.Cost.current.value\n    };\n\n    //console.log(gasto);\n    //Enviando datos\n    this.props.Addgasto(gasto);\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.CrGasto}>\n        <h2>Agrega tus gastos aqui</h2>\n        <div className=\"campo\">\n          <label>Nombre Gasto</label>\n          <input\n            className=\"u-full-width\"\n            type=\"text\"\n            placeholder=\"Ej. Transporte\"\n            ref={this.NGast}\n          />\n        </div>\n\n        <div className=\"campo\">\n          <label>Cantidad</label>\n          <input\n            className=\"u-full-width\"\n            type=\"text\"\n            placeholder=\"Ej. 300\"\n            ref={this.Cost}\n          />\n        </div>\n        <input\n          className=\"button-primary u-full-width\"\n          type=\"submit\"\n          value=\"Agregar\"\n        />\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  Addgasto: PropTypes.func.isRequired\n};\n\nexport default Form;\n","import React, { Component } from \"react\";\n\nclass Presupuesto extends Component {\n  render() {\n    return (\n      <div className=\"alert alert-info\" role=\"alert\">\n        <h3>Presupuesto: ${this.props.presupuesto}</h3>\n      </div>\n    );\n  }\n}\n\nexport default Presupuesto;\n","export const validarPresupuesto = presupuesto => {\n  let totalPresupuesto = parseInt(presupuesto, 10) || 0;\n\n  if (totalPresupuesto > 0) {\n    return totalPresupuesto;\n  } else {\n    return false;\n  }\n};\n\nexport const revisarPresupuesto = (presupuesto, restante) => {\n  let clase;\n  // Comprobar el 25%\n  if (presupuesto / 4 > restante) {\n    clase = \"alert alert-danger\";\n  } else if (presupuesto / 2 > restante) {\n    clase = \"alert alert-warning\";\n  } else {\n    clase = \"alert alert alert-success\";\n  }\n  return clase;\n};\n","import React, { Component } from \"react\";\n\nimport { revisarPresupuesto } from \"../helper.js\";\n\nclass Restante extends Component {\n  render() {\n    const presupuesto = this.props.presupuesto;\n    const restante = this.props.restante;\n    \n    return (\n      <div>\n        <div className={revisarPresupuesto(presupuesto,restante)} role=\"alert\">\n          <h3>Restante: ${this.props.restante}</h3>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Restante;\n","import React, { Component } from \"react\";\n\nimport Presupuesto from \"./Presupuesto.jsx\";\nimport Restante from \"./Restante.jsx\";\n\nclass Control extends Component {\n  render() {\n    return (\n      <>\n        <Presupuesto presupuesto={this.props.presupuesto} />\n        <Restante\n          restante={this.props.restante}\n          presupuesto={this.props.presupuesto}\n        />\n      </>\n    );\n  }\n}\nexport default Control;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Gasto extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const { Coste, Gast } = this.props.gasto;\n    return (\n      <li className=\"gastos\">\n        <p>\n          {Gast}\n          <span className=\"gasto\">${Coste}</span>\n        </p>\n      </li>\n    );\n  }\n}\n\nGasto.propTypes = {\n  gasto: PropTypes.object.isRequired\n};\nGasto.defaultpropTypes = {\n  Gast: \"Error\",\n  Coste: \"Error\"\n};\n\nexport default Gasto;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Control from \"./Control.jsx\";\n\nimport Gasto from \"./Gasto.jsx\";\n\nclass Listado extends Component {\n  render() {\n    return (\n      <div className=\"gastos-realizados\">\n        <h2>Listado</h2>\n        {Object.keys(this.props.gastos).map(key => (\n          <Gasto key={key} gasto={this.props.gastos[key]} />\n        ))}\n        <Control\n          presupuesto={this.props.presupuesto}\n          restante={this.props.restante}\n        />\n      </div>\n    );\n  }\n}\n\nListado.propTypes = {\n  gastos: PropTypes.object.isRequired\n};\n\nexport default Listado;\n","import React, { Component } from \"react\";\n\nimport \"./css/App.css\";\n\nimport Header from \"./components/Header.jsx\";\nimport Form from \"./components/Form.jsx\";\nimport Listado from \"./components/Listado.jsx\";\n\nimport { validarPresupuesto } from \"./helper.js\";\n\nclass App extends Component {\n  state = {\n    presupuesto: \"\",\n    restante: \"\",\n    gastos: {}\n  };\n\n  componentDidMount() {\n    this.ObtenerPresupuesto();\n  }\n\n  ObtenerPresupuesto() {\n    let presupuesto = prompt(\"Cual es tu presupuesto\");\n\n    let resultado = validarPresupuesto(presupuesto);\n\n    if (resultado) {\n      const presupuesto = resultado;\n      this.setState({\n        presupuesto,\n        restante: presupuesto\n      });\n    } else {\n      this.ObtenerPresupuesto();\n    }\n  }\n\n  Addgasto = gasto => {\n    //copia del state\n    const gastos = { ...this.state.gastos };\n\n    gastos[`gasto${Date.now()}`] = gasto;\n\n    this.restPres(gasto.Coste);\n\n    this.setState({\n      gastos\n    });\n  };\n\n  restPres = cost =>{\n    let restar = Number(cost)\n    //copia del state\n    let restante = this.state.restante\n    //restar\n    restante -= restar;\n    //establecer state\n\n    this.setState({\n      restante\n    });\n    \n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header title=\"Head\" />\n        <div className=\"contenido-principal contenido\">\n          <div className=\"row\">\n            <div className=\"col md-mx-auto\">\n              <Form Addgasto={this.Addgasto} />\n            </div>\n            <div className=\"col md-mx-auto\">\n              <Listado\n                gastos={this.state.gastos}\n                presupuesto={this.state.presupuesto}\n                restante={this.state.restante}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n//import './css/index.css';\n\nimport \"./App.css\";\nimport \"bootstrap/dist/js/bootstrap.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}